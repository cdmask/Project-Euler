//Problem 2 of project euler

//Each new term in the Fibonacci sequence is generated by adding the previous two terms.
//By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#include<iostream>
using namespace std;
//Declare functions
long int Fibonacci(int);
int even_valued(long int);

int main(void) {

long int i=1;
long sum = 0;
while(Fibonacci(i)<4000000)
{
 if(even_valued(Fibonacci(i)))
 sum+=Fibonacci(i);
 i++;
}
cout<< sum;
  return 0;
}

// Get Fibonacci series
long Fibonacci(int n)
{
  if (n==1)
  return 1;
  if (n==2)
  return 2;
  else
  return Fibonacci(n-1)+Fibonacci(n-2);
}
//Check if x is even_valued
int even_valued(long int x)
{
  if (x%2==0)
  return 1;
  else return 0;
}
